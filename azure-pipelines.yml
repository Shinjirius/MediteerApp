# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  containerRegistry: 'martinwdejong_container_registry'
  imageName: 'mediteer_app'
  projectfilePath: 'MediteerApp/MediteerApp.csproj'
  testsProjectfilePath: '*Tests/*.csproj'
  dockerfilePath: 'MediteerApp/Dockerfile'

stages:
- stage: "BuildAndTest"
  displayName: "BuildAndTest"
  jobs:
    - job: "BuildAndTest"
      steps:
      # Build and runs tests
      - task: DotNetCoreCLI@2
        displayName: "Build and run Tests"
        inputs:
          command: test
          projects: $(testsProjectfilePath)
          arguments: '--configuration $(buildConfiguration)'

      # Build project
      - script: dotnet build --configuration $(buildConfiguration)
        displayName: 'Build project'

# Do a zip artifect deploy that will be picked up by release pipeline
- stage: "PublishArtifect"
  displayName: "PublishArtifect"
  jobs:
    - job: "PublishArtifect"
      steps:
      # Publish the artifect (so it can be deployed)
      - task: DotNetCoreCLI@2
        displayName: 'Build artifacts'
        inputs:
          command: publish
          publishWebProjects: false
          projects: $(projectfilePath) 
          arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: true

      - task: PublishBuildArtifacts@1
        displayName: 'Publish artifacts'

# Do a docker built and deploy
- stage: "BuildAndPushDocker"
  displayName: "BuildAndPushDocker"
  jobs:
    - job: "BuildDocker"
      steps:
      - task: DockerInstaller@0
        displayName: Install Docker on VM
        inputs:
          dockerVersion: 17.09.0-ce
          releaseType: stable
      - task: Docker@2
        displayName: Login to ACR
        inputs:
          command: login
          containerRegistry:  $(containerRegistry) 
      - task: Docker@2
        displayName: Build and Push Docker Image
        inputs:
          repository: $(imageName) 
          command: buildAndPush
          Dockerfile: $(dockerfilePath) 
      - task: Docker@2
        displayName: Logout of ACR
        inputs:
          command: logout
          containerRegistry: $(containerRegistry) 
